Сегодня я разобрался с работой атрибутов классов и объектов

---
Существуют следующие методы
__dict__ - это словарь атрибутов, в случае класса у нас будет несколько встроенных методов.
Однако для экземпляра класса будут существовать атрибуты, только определенные при вызове метода __init__(self)
При этом если мы вызовем определенный атрибут у экземпляра класса, не обозначенный в __init__(self),
то этот атрибут будет ссылаться на значение атрибута класса.

__doc__ - содержит строку с описанием класса

getattr(obj, name: str, default: Any) - возвращает значение атрибута, третий аргумент будет возвращен, если атрибут не найден
(Третий атрибут не обязателен, но тогда будет возвращаться исключение AttributeError)

hasattr(obj, name: str) - возвращает True, если атрибут найден, иначе False

setattr(obj, name, value) - устанавливает значение атрибута [name] в [value], иначе атрибут создается и то же самое

delattr(obj, name) - удаляет атрибут [name]